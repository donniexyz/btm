BTM - Bitronix's JTA transaction manager

========================================
version 1.3-beta1, April 5, 2008

 * BTM-4   Implement incremental recovery
 * BTM-7   Resource password is not decrypted when using the API
 * BTM-8   Durable subscribers cannot participate in XA
 * BTM-9   BitronixTransactionManager JNDI reference throws NPE on toString()
 * BTM-10  Race condition in connection pools when lazily initialized
 * BTM-11  Implement an embedded JNDI provider that allows to retrieve the TM and configured resources in a more standard way
 * BTM-12  add maven support
 * BTM-13  Implement ordering of XAResource during 2PC execution
 * Shutdown hook is not registered anymore when the TM starts up. It is now mandatory to shut it down manually.
 * Dropped all deprecated classes and methods.
 * Fixed incorrect transaction manager startup while using pools when BTM is not started.
 * Moved CryptoEngine to bitronix.tm.utils, kept bitronix.tm.internal.CryptoEngine but deprecated it.
 * Resource Loader cannot bind to JNDI anymore (no more needed, see: BTM-11), this obsoletes bitronix.tm.resource.bind property.
 * Transaction timeout logic has been rationalized, this obsoletes bitronix.tm.timer.transactionRetryInterval property.

Important notes
---------------
 Incremental recovery required a change in the Disk Journal's log format. Compatibility with older format (1.2 and below)
 has been maintained but journals created by BTM 1.3 cannot be read by older versions.


========================================
version 1.3-beta2, May 17, 2008

 * BTM-4   Implement incremental recovery
 * BTM-7   Resource password is not decrypted when using the API
 * BTM-8   Durable subscribers cannot participate in XA
 * BTM-9   BitronixTransactionManager JNDI reference throws NPE on toString()
 * BTM-10  Race condition in connection pools when lazily initialized
 * BTM-11  Implement an embedded JNDI provider that allows to retrieve the TM and configured resources in a more standard way
 * BTM-12  add maven support
 * BTM-13  Implement ordering of XAResource during 2PC execution
 * BTM-14  Need the ability to have BTM invoke specific methods on JDBC connection upon return to the pool
 * BTM-17  Set tx status to marked_rollback on timeout
 * Dropped all deprecated classes and methods.
 * Shutdown hook is not registered anymore when the TM starts up. It is now mandatory to shut it down manually.
 * Fixed incorrect transaction manager startup while using pools when BTM is not started.
 * Moved CryptoEngine to bitronix.tm.utils, kept bitronix.tm.internal.CryptoEngine but deprecated it.
 * Resource Loader cannot bind to JNDI anymore (no more needed, see: BTM-11), this obsoletes bitronix.tm.resource.bind property.
 * Transaction timeout logic has been rationalized, this obsoletes bitronix.tm.timer.transactionRetryInterval property.
 * Lowered statement cache overhead when it is disabled.
 * Fixed bug in the double LRC enlistment check that prevented safe cases from working.
 * Upgraded JTA and JMS jars to the latest 1.4-compiled version.

Important note
--------------
 Incremental recovery required a change in the Disk Journal's log format. Compatibility with older format (1.2 and below)
 has been maintained but journals created by BTM 1.3 cannot be used by older versions.


========================================
version 1.3-RC1, June 17, 2008

 * BTM-4   Implement incremental recovery
 * BTM-7   Resource password is not decrypted when using the API
 * BTM-8   Durable subscribers cannot participate in XA
 * BTM-9   BitronixTransactionManager JNDI reference throws NPE on toString()
 * BTM-10  Race condition in connection pools when lazily initialized
 * BTM-11  Implement an embedded JNDI provider that allows to retrieve the TM and configured resources in a more standard way
 * BTM-12  add maven support
 * BTM-13  Implement ordering of XAResource during 2PC execution
 * BTM-14  Need the ability to have BTM invoke specific methods on JDBC connection upon return to the pool
 * BTM-17  Set tx status to marked_rollback on timeout
 * BTM-18  Invoke XAResource.setTransactionTimeout() when a resource is enlisted
 * BTM-19  No effect by setting auto-commit to false on LrcConnectionHandle
 * BTM-20  XAResourceManager incorrectly checking resource joinability
 * BTM-21  Differing journal-file lengths cause BTM to fail to start even if skipCorrectedLogs is true
 * Dropped all deprecated classes and methods.
 * Shutdown hook is not registered anymore when the TM starts up. It is now mandatory to shut it down manually.
 * Fixed incorrect transaction manager startup while using pools when BTM is not started.
 * Moved CryptoEngine to bitronix.tm.utils, kept bitronix.tm.internal.CryptoEngine but deprecated it.
 * Resource Loader cannot bind to JNDI anymore (no more needed, see: BTM-11), this obsoletes bitronix.tm.resource.bind property.
 * Transaction timeout logic has been rationalized, this obsoletes bitronix.tm.timer.transactionRetryInterval property.
 * Lowered statement cache overhead when it is disabled.
 * Fixed bug in the double LRC enlistment check that prevented safe cases from working.
 * Upgraded JTA and JMS jars to the latest 1.4-compiled version.
 * Added new configuration property 'journal' that allows to switch between the classic 'disk' journal and a new non-logging 'null' journal.
 * Fixed lots of misc bugs.

Important note
--------------
 Incremental recovery required a change in the Disk Journal's log format. Compatibility with older format (1.2 and below)
 has been maintained but journals created by BTM 1.3 cannot be used by older versions.


========================================
version 1.3-RC2, July 30, 2008

 * BTM-4   Implement incremental recovery
 * BTM-7   Resource password is not decrypted when using the API
 * BTM-8   Durable subscribers cannot participate in XA
 * BTM-9   BitronixTransactionManager JNDI reference throws NPE on toString()
 * BTM-10  Race condition in connection pools when lazily initialized
 * BTM-11  Implement an embedded JNDI provider that allows to retrieve the TM and configured resources in a more standard way
 * BTM-12  add maven support
 * BTM-13  Implement ordering of XAResource during 2PC execution
 * BTM-14  Need the ability to have BTM invoke specific methods on JDBC connection upon return to the pool
 * BTM-17  Set tx status to marked_rollback on timeout
 * BTM-18  Invoke XAResource.setTransactionTimeout() when a resource is enlisted
 * BTM-19  No effect by setting auto-commit to false on LrcConnectionHandle
 * BTM-20  XAResourceManager incorrectly checking resource joinability
 * BTM-21  Differing journal-file lengths cause BTM to fail to start even if skipCorrectedLogs is true
 * BTM-22  Resource rollback not handled properly
 * Dropped all deprecated classes and methods.
 * Shutdown hook is not registered anymore when the TM starts up. It is now mandatory to shut it down manually.
 * Fixed incorrect transaction manager startup while using pools when BTM is not started.
 * Moved CryptoEngine to bitronix.tm.utils, kept bitronix.tm.internal.CryptoEngine but deprecated it.
 * Resource Loader cannot bind to JNDI anymore (no more needed, see: BTM-11), this obsoletes bitronix.tm.resource.bind property.
 * Transaction timeout logic has been rationalized, this obsoletes bitronix.tm.timer.transactionRetryInterval property.
 * Lowered statement cache overhead when it is disabled.
 * Fixed bug in the double LRC enlistment check that prevented safe cases from working.
 * Upgraded JTA and JMS jars to the latest 1.4-compiled version.
 * Added new configuration property 'journal' that allows to switch between the classic 'disk' journal and a new non-logging 'null' journal.
 * Fixed lots of misc bugs.

Important note
--------------
 Incremental recovery required a change in the Disk Journal's log format. Compatibility with older format (1.2 and below)
 has been maintained but journals created by BTM 1.3 cannot be used by older versions.


========================================
version 1.3, August 18, 2008

 * BTM-4   Implement incremental recovery
 * BTM-7   Resource password is not decrypted when using the API
 * BTM-8   Durable subscribers cannot participate in XA
 * BTM-9   BitronixTransactionManager JNDI reference throws NPE on toString()
 * BTM-10  Race condition in connection pools when lazily initialized
 * BTM-11  Implement an embedded JNDI provider that allows to retrieve the TM and configured resources in a more standard way
 * BTM-12  add maven support
 * BTM-13  Implement ordering of XAResource during 2PC execution
 * BTM-14  Need the ability to have BTM invoke specific methods on JDBC connection upon return to the pool
 * BTM-17  Set tx status to marked_rollback on timeout
 * BTM-18  Invoke XAResource.setTransactionTimeout() when a resource is enlisted
 * BTM-19  No effect by setting auto-commit to false on LrcConnectionHandle
 * BTM-20  XAResourceManager incorrectly checking resource joinability
 * BTM-21  Differing journal-file lengths cause BTM to fail to start even if skipCorrectedLogs is true
 * BTM-22  Resource rollback not handled properly
 * Dropped all deprecated classes and methods.
 * Shutdown hook is not registered anymore when the TM starts up. It is now mandatory to shut it down manually.
 * Fixed incorrect transaction manager startup while using pools when BTM is not started.
 * Moved CryptoEngine to bitronix.tm.utils, kept bitronix.tm.internal.CryptoEngine but deprecated it.
 * Resource Loader cannot bind to JNDI anymore (no more needed, see: BTM-11), this obsoletes bitronix.tm.resource.bind property.
 * Transaction timeout logic has been rationalized, this obsoletes bitronix.tm.timer.transactionRetryInterval property.
 * Lowered statement cache overhead when it is disabled.
 * Fixed bug in the double LRC enlistment check that prevented safe cases from working.
 * Upgraded JTA and JMS jars to the latest 1.4-compiled version.
 * Added new configuration property 'journal' that allows to switch between the classic 'disk' journal and a new non-logging 'null' journal.
 * Upgraded SLF4J to version 1.5.2.
 * Fixed lots of misc bugs.

Important note
--------------
 Incremental recovery required a change in the Disk Journal's log format. Compatibility with older format (1.2 and below)
 has been maintained but journals created by BTM 1.3 cannot be used by older versions.


========================================
version 1.3.1, September 28, 2008

 * BTM-23  Add the ability to set guarantee the isolation level of resource
 * BTM-24  recovery engine does not fully supports clustering
 * BTM-25  add shutdown support for app servers
 * BTM-26  JMX must be disabled if a resource's uniqueName contains a ':' character
 * BTM-28  Race condition when mixing global and local transactions
 * BTM-29  Random CorruptedTransactionLogException thrown during swapJournalFiles under JDK 1.6
 * BTM-30  Resource creation cannot map long primitives to vendor's XADataSource
 * Removed deprecated poolsize property of ResourceBean
 * Enforced mandatory parameters when LrcXADataSource is used


========================================
version 1.3.1-beta1, September 10, 2008

 * BTM-23  Add the ability to set guarantee the isolation level of resource
 * BTM-24  recovery engine does not fully supports clustering
 * BTM-25  add shutdown support for app servers
 * BTM-26  JMX must be disabled if a resource's uniqueName contains a ':' character
 * BTM-28  Race condition when mixing global and local transactions
 * BTM-29  Random CorruptedTransactionLogException thrown during swapJournalFiles under JDK 1.6
 * BTM-30  Resource creation cannot map long primitives to vendor's XADataSource


========================================
version 1.3.2, October 17, 2008

 * BTM-31  Synchronization registering another Synchronization with a different position aborts transaction


========================================
version 1.3.3, Oct 25, 2009

Getting started guide: http://docs.codehaus.org/display/BTM/NewUserGuide
Best practices: http://docs.codehaus.org/display/BTM/JtaBestPractices
API javadoc: http://btm.codehaus.org/api/1.3.3/

 Bugs fixed in final release
 ---------------------------
* BTM-55   	NPE in PoolingConnectionFactory.java:137 after a createRecoveryXaResourceHolder() did fail on a JmsConnection

 Changes in final release
 ------------------------
* Fixed race condition in JMS pool
* Upgraded SLF4J to version 1.5.8
* BTM now maps the transaction's GTRID to the logger's MDC when available

 Changes in RC2
 --------------
* improved JndiXAConnectionFactory to allow setting urlPkgPrefixes property (required for HortnetQ support)
* fixed leftover bug from BTM-44
* more tests have been added

 Changes in RC1
 --------------
* Refactored the recoverer to implement a much safer algorithm.
* Background recoverer is now enabled by default and configured with the new property Configuration.backgroundRecoveryIntervalSeconds.
  The backgroundRecoveryInterval property has been depecated.
* Resources which cannot be recoverer during startup now don't prevent the transaction manager from starting up but are simply marked
  as 'failed'. Failed resources cannot be used and are automatically retried by the background recoverer.
  This supercedes the 'retryUnrecoverableResourcesRegistrationInterval' configuration property which has been removed.
* 'currentNodeOnlyRecovery' is now enabled by default (see http://docs.codehaus.org/display/BTM/ImplementationDetails#ImplementationDetails-currentNodeOnlyRecovery).
  The recoverer now logs some INFO message when some XIDs have been skipped because this feature is enabled.
* Fixed race conditions in the asynchronous 2PC engine.

 Bugs fixed in RC1
 -----------------
* BTM-33   	race condition: potential connection leak when closing connection after transaction terminated
* BTM-34 	IllegalArgumentException and MBean exceptions on constraint violation
* BTM-37 	Tomcat LifecycleListener shutting down TM too early
* BTM-38 	NPE in IncrementalRecoverer
* BTM-39 	Improper HeuristicMixedException
* BTM-41 	JNDI Context (BitronixContext) returns null rather than NameNotFoundException
* BTM-42 	bitronix-scheduler is recreated/restart
* BTM-43 	Fix for BTM-33 leads to another problem
* BTM-44 	TransactionLogRecord does not get updated when modified, leading to transaction log corruption
* BTM-45 	potential NPE in Recoverer.run
* BTM-46 	Fall back to current class loader when thread context loader fails (support OSGi)
* BTM-47 	improve unrecoverable resource registration retrial and recoverer implementation
* BTM-48 	change currentNodeOnlyRecovery default value to true
* BTM-49 	Suspend/resume not working as expected
* BTM-50 	Improve JndiXAConnectionFactory in order to be able to use SonicMQ


Using BTM
---------
Required jars are distributed in the lib subdirectory.

Latest Documentation:
   http://docs.codehaus.org/display/BTM/

Bug Reports:
   BTM JIRA (http://jira.codehaus.org/browse/BTM/)


License
-------
This software is distributed under the terms of the GNU Lesser General Public License (see license.txt).

This product includes software developed by the Apache Software Foundation (http://www.apache.org/).
